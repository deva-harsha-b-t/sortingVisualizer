{"ast":null,"code":"import { swap } from './helpers';\n\nconst BubbleSort = (array, position, arraySteps, colorSteps) => {\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\n\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - i - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        array = swap(array, j, j + 1);\n      }\n\n      arraySteps.push(array.slice());\n      colorKey[j] = 1;\n      colorKey[j + 1] = 1;\n      colorSteps.push(colorKey.slice());\n      colorKey[j] = 0;\n      colorKey[j + 1] = 0;\n    }\n\n    colorKey[arraySteps.length - i - 1] = 2;\n    arraySteps.push(array.slice());\n    colorSteps.push(colorKey.sclice());\n  }\n\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n  return;\n};\n\n_c = BubbleSort;\nexport default BubbleSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"BubbleSort\");","map":{"version":3,"sources":["C:/Files/projects/web-base/react-projects/sortingvisualizer/src/algorithms/bubblesort.js"],"names":["swap","BubbleSort","array","position","arraySteps","colorSteps","colorKey","length","slice","i","j","push","sclice","Array","fill"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,WAAnB;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAOC,QAAP,EAAgBC,UAAhB,EAA2BC,UAA3B,KAA0C;AACzD,MAAIC,QAAQ,GAAGD,UAAU,CAACA,UAAU,CAACE,MAAX,GAAoB,CAArB,CAAV,CAAkCC,KAAlC,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACP,KAAK,CAACK,MAArB,EAA6BE,CAAC,EAA9B,EAAiC;AAC7B,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACR,KAAK,CAACK,MAAN,GAAeE,CAAf,GAAmB,CAAlC,EAAoCC,CAAC,EAArC,EAAwC;AACpC,UAAGR,KAAK,CAACQ,CAAD,CAAL,GAASR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAAjB,EAAuB;AACnBR,QAAAA,KAAK,GAAGF,IAAI,CAACE,KAAD,EAASQ,CAAT,EAAaA,CAAC,GAAC,CAAf,CAAZ;AACH;;AACDN,MAAAA,UAAU,CAACO,IAAX,CAAgBT,KAAK,CAACM,KAAN,EAAhB;AACAF,MAAAA,QAAQ,CAACI,CAAD,CAAR,GAAc,CAAd;AACAJ,MAAAA,QAAQ,CAACI,CAAC,GAAC,CAAH,CAAR,GAAgB,CAAhB;AACAL,MAAAA,UAAU,CAACM,IAAX,CAAgBL,QAAQ,CAACE,KAAT,EAAhB;AACAF,MAAAA,QAAQ,CAACI,CAAD,CAAR,GAAc,CAAd;AACAJ,MAAAA,QAAQ,CAACI,CAAC,GAAC,CAAH,CAAR,GAAgB,CAAhB;AACH;;AACDJ,IAAAA,QAAQ,CAACF,UAAU,CAACG,MAAX,GAAoBE,CAApB,GAAwB,CAAzB,CAAR,GAAsC,CAAtC;AACAL,IAAAA,UAAU,CAACO,IAAX,CAAgBT,KAAK,CAACM,KAAN,EAAhB;AACAH,IAAAA,UAAU,CAACM,IAAX,CAAgBL,QAAQ,CAACM,MAAT,EAAhB;AACH;;AACDP,EAAAA,UAAU,CAACA,UAAU,CAACE,MAAX,GAAoB,CAArB,CAAV,GAAoC,IAAIM,KAAJ,CAAUX,KAAK,CAACK,MAAhB,EAAwBO,IAAxB,CAA6B,CAA7B,CAApC;AACA;AACH,CApBD;;KAAMb,U;AAqBN,eAAeA,UAAf","sourcesContent":["import {swap} from './helpers';\r\n\r\nconst BubbleSort = (array,position,arraySteps,colorSteps) => {\r\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n    for(let i=0; i<array.length; i++){\r\n        for(let j=0; j<array.length - i - 1;j++){\r\n            if(array[j]>array[j+1]){\r\n                array = swap(array , j , j+1);\r\n            }\r\n            arraySteps.push(array.slice());\r\n            colorKey[j] = 1;\r\n            colorKey[j+1] = 1;\r\n            colorSteps.push(colorKey.slice());\r\n            colorKey[j] = 0;\r\n            colorKey[j+1] = 0;\r\n        }\r\n        colorKey[arraySteps.length - i - 1] = 2;\r\n        arraySteps.push(array.slice());\r\n        colorSteps.push(colorKey.sclice());\r\n    }\r\n    colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\r\n    return;\r\n};\r\nexport default BubbleSort;"]},"metadata":{},"sourceType":"module"}