{"ast":null,"code":"var _jsxFileName = \"C:\\\\Files\\\\projects\\\\web-base\\\\react-projects\\\\sortingvisualizer\\\\src\\\\App.js\";\n//react\nimport React, { Component } from 'react'; //algorithms\n\nimport BubbleSort from './algorithms/bubblesort'; //css && components\n\nimport './App.css';\nimport Bar from './components/bar'; //icons\n\nimport Play from '@material-ui/icons/PlayCircleOutlineRounded';\nimport Forward from '@material-ui/icons/SkipNextRounded';\nimport Backward from '@material-ui/icons/SkipPreviousRounded';\nimport RotateLeft from '@material-ui/icons/RotateLeftRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [],\n      arraySteps: [],\n      colorKey: [],\n      colorSteps: [],\n      currentStep: 0,\n      count: 20,\n      algorithm: 'bubble Sort',\n      delay: 100,\n      timeouts: []\n    };\n    this.ALGORITHMS = {\n      'bubble Sort': BubbleSort\n    };\n\n    this.generateRandomNumber = (min, max) => {\n      return Math.floor(Math.random() * (max - min) + min);\n    };\n\n    this.changeArray = (index, value) => {\n      let arr = this.state.array;\n      arr[index] = value;\n      this.setState({\n        array: arr,\n        arraySteps: [arr],\n        currentStep: 0\n      }, () => {\n        this.generateSteps();\n      });\n    };\n\n    this.generateSteps = () => {\n      let array = this.state.array.slice();\n      let steps = this.state.arraySteps.slice();\n      let colorSteps = this.state.colorSteps.slice();\n      this.ALGORITHMS[this.state.algorithm](array, 0, steps, colorSteps);\n      this.setState({\n        arraySteps: steps,\n        cokorSteps: colorSteps\n      });\n    };\n\n    this.clearColorKey = () => {\n      let blankKey = new Array(this.state.count).fill(0);\n      this.setState({\n        colorKey: blankKey,\n        colorSteps: [blankKey]\n      });\n    };\n\n    this.generateRandomArray = () => {\n      this.clearColorKey();\n      const count = this.state.count;\n      const tempArray = [];\n\n      for (var i = 0; i < count; i++) {\n        tempArray.push(this.generateRandomNumber(50, 200));\n      }\n\n      this.setState({\n        array: tempArray,\n        arraySteps: [tempArray],\n        currentStep: 0\n      }, () => {\n        this.generateSteps();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.generateRandomArray();\n  }\n\n  render() {\n    let bars = this.state.array.map((value, index) => /*#__PURE__*/_jsxDEV(Bar, {\n      index: index,\n      length: value,\n      color: 0,\n      changearray: this.changeArray\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this));\n    let playButton;\n\n    if (this.state.arraySteps === this.state.currentStep) {\n      playButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"controller\",\n        children: /*#__PURE__*/_jsxDEV(RotateLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    } else {\n      playButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"controller\",\n        children: /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"barsDiv container card\",\n          children: [\" \", bars, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-pannel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"controller\",\n            children: /*#__PURE__*/_jsxDEV(Backward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), playButton, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"controller\",\n            children: /*#__PURE__*/_jsxDEV(Forward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pannel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Files/projects/web-base/react-projects/sortingvisualizer/src/App.js"],"names":["React","Component","BubbleSort","Bar","Play","Forward","Backward","RotateLeft","App","state","array","arraySteps","colorKey","colorSteps","currentStep","count","algorithm","delay","timeouts","ALGORITHMS","generateRandomNumber","min","max","Math","floor","random","changeArray","index","value","arr","setState","generateSteps","slice","steps","cokorSteps","clearColorKey","blankKey","Array","fill","generateRandomArray","tempArray","i","push","componentDidMount","render","bars","map","playButton"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,6CAAjB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBQ,KADwB,GAChB;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,UAAU,EAAC,EAFP;AAGJC,MAAAA,QAAQ,EAAC,EAHL;AAIJC,MAAAA,UAAU,EAAC,EAJP;AAKJC,MAAAA,WAAW,EAAC,CALR;AAMJC,MAAAA,KAAK,EAAC,EANF;AAOJC,MAAAA,SAAS,EAAC,aAPN;AAQJC,MAAAA,KAAK,EAAC,GARF;AASJC,MAAAA,QAAQ,EAAC;AATL,KADgB;AAAA,SAYxBC,UAZwB,GAYX;AACT,qBAAcjB;AADL,KAZW;;AAAA,SAmBxBkB,oBAnBwB,GAmBD,CAACC,GAAD,EAAOC,GAAP,KAAc;AACjC,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeH,GAAG,GAAGD,GAArB,IAA4BA,GAAvC,CAAP;AAEH,KAtBuB;;AAAA,SAuBxBK,WAvBwB,GAuBV,CAACC,KAAD,EAAOC,KAAP,KAAgB;AAC1B,UAAIC,GAAG,GAAG,KAAKpB,KAAL,CAAWC,KAArB;AACAmB,MAAAA,GAAG,CAACF,KAAD,CAAH,GAAaC,KAAb;AAEA,WAAKE,QAAL,CAAc;AACVpB,QAAAA,KAAK,EAACmB,GADI;AAEVlB,QAAAA,UAAU,EAAC,CAACkB,GAAD,CAFD;AAGVf,QAAAA,WAAW,EAAC;AAHF,OAAd,EAGoB,MAAI;AAChB,aAAKiB,aAAL;AACH,OALL;AAMH,KAjCuB;;AAAA,SAkCxBA,aAlCwB,GAkCR,MAAK;AACjB,UAAIrB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBsB,KAAjB,EAAZ;AACA,UAAIC,KAAK,GAAG,KAAKxB,KAAL,CAAWE,UAAX,CAAsBqB,KAAtB,EAAZ;AACA,UAAInB,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAAX,CAAsBmB,KAAtB,EAAjB;AACA,WAAKb,UAAL,CAAgB,KAAKV,KAAL,CAAWO,SAA3B,EAAsCN,KAAtC,EAA4C,CAA5C,EAA8CuB,KAA9C,EAAoDpB,UAApD;AACA,WAAKiB,QAAL,CAAc;AACVnB,QAAAA,UAAU,EAACsB,KADD;AAEVC,QAAAA,UAAU,EAACrB;AAFD,OAAd;AAIH,KA3CuB;;AAAA,SA4CxBsB,aA5CwB,GA4CR,MAAK;AACjB,UAAIC,QAAQ,GAAG,IAAIC,KAAJ,CAAU,KAAK5B,KAAL,CAAWM,KAArB,EAA4BuB,IAA5B,CAAiC,CAAjC,CAAf;AACA,WAAKR,QAAL,CAAc;AACVlB,QAAAA,QAAQ,EAACwB,QADC;AAEVvB,QAAAA,UAAU,EAAC,CAACuB,QAAD;AAFD,OAAd;AAIH,KAlDuB;;AAAA,SAmDxBG,mBAnDwB,GAmDF,MAAK;AACvB,WAAKJ,aAAL;AACA,YAAMpB,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAzB;AACA,YAAMyB,SAAS,GAAG,EAAlB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAC1B,KAAhB,EAAsB0B,CAAC,EAAvB,EAA0B;AACtBD,QAAAA,SAAS,CAACE,IAAV,CAAe,KAAKtB,oBAAL,CAA0B,EAA1B,EAA6B,GAA7B,CAAf;AACH;;AACD,WAAKU,QAAL,CAAc;AACVpB,QAAAA,KAAK,EAAG8B,SADE;AAEV7B,QAAAA,UAAU,EAAG,CAAC6B,SAAD,CAFH;AAGV1B,QAAAA,WAAW,EAAG;AAHJ,OAAd,EAIE,MAAI;AACF,aAAKiB,aAAL;AACH,OAND;AAOH,KAjEuB;AAAA;;AAexBY,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,mBAAL;AACH;;AAiDDK,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,KAAKpC,KAAL,CAAWC,KAAX,CAAiBoC,GAAjB,CAAqB,CAAClB,KAAD,EAAOD,KAAP,kBAExB,QAAC,GAAD;AACA,MAAA,KAAK,EAAIA,KADT;AAEA,MAAA,MAAM,EAAIC,KAFV;AAGA,MAAA,KAAK,EAAI,CAHT;AAIA,MAAA,WAAW,EAAI,KAAKF;AAJpB,OAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,YAFG,CAAX;AASA,QAAIoB,UAAJ;;AACA,QAAG,KAAKtC,KAAL,CAAWE,UAAX,KAA0B,KAAKF,KAAL,CAAWK,WAAxC,EAAoD;AAChDiC,MAAAA,UAAU,gBACN;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAMK;AACDA,MAAAA,UAAU,gBACN;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,wBACQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,0BAA0CF,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACA;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADA,EAIKE,UAJL,eAKA;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA,mCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA,eAeA;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAmBH;;AA9GuB;;AAkH5B,eAAevC,GAAf","sourcesContent":["//react\nimport React, { Component} from 'react';\n\n//algorithms\nimport BubbleSort from './algorithms/bubblesort';\n\n//css && components\nimport './App.css';\nimport Bar from './components/bar';    \n\n//icons\nimport Play from '@material-ui/icons/PlayCircleOutlineRounded'\nimport Forward from '@material-ui/icons/SkipNextRounded'\nimport Backward from '@material-ui/icons/SkipPreviousRounded'\nimport RotateLeft from '@material-ui/icons/RotateLeftRounded'\n\nclass App extends Component {\n    state = {\n        array:[],\n        arraySteps:[],\n        colorKey:[],\n        colorSteps:[],\n        currentStep:0,\n        count:20,\n        algorithm:'bubble Sort',\n        delay:100,\n        timeouts:[],\n    };\n    ALGORITHMS = {\n        'bubble Sort':BubbleSort,\n    }\n    componentDidMount() {\n        this.generateRandomArray();\n    }\n\n    generateRandomNumber = (min , max) =>{\n        return Math.floor(Math.random()*(max - min) + min);\n\n    }\n    changeArray = (index,value) =>{\n        let arr = this.state.array;\n        arr[index] = value;\n\n        this.setState({\n            array:arr,\n            arraySteps:[arr],\n            currentStep:0 },()=>{\n                this.generateSteps();\n            });\n    };\n    generateSteps = () =>{\n        let array = this.state.array.slice();\n        let steps = this.state.arraySteps.slice();\n        let colorSteps = this.state.colorSteps.slice();\n        this.ALGORITHMS[this.state.algorithm](array,0,steps,colorSteps);\n        this.setState({\n            arraySteps:steps,\n            cokorSteps:colorSteps\n        })\n    }\n    clearColorKey = () =>{\n        let blankKey = new Array(this.state.count).fill(0);\n        this.setState({\n            colorKey:blankKey,\n            colorSteps:[blankKey]\n        })\n    }\n    generateRandomArray = () =>{\n        this.clearColorKey();\n        const count = this.state.count;\n        const tempArray = [];\n        for(var i = 0;i<count;i++){\n            tempArray.push(this.generateRandomNumber(50,200));\n        }\n        this.setState({\n            array : tempArray,\n            arraySteps : [tempArray],\n            currentStep : 0\n        },()=>{\n            this.generateSteps();\n        })\n    }\n    render() {\n        let bars = this.state.array.map((value,index) => (\n\n                <Bar key = {index}\n                index = {index}\n                length = {value}\n                color = {0}\n                changearray = {this.changeArray} \n                />\n        ));\n        let playButton;\n        if(this.state.arraySteps === this.state.currentStep){\n            playButton = (\n                <button className=\"controller\">\n                    <RotateLeft/>\n                </button>\n            )\n        }else{\n            playButton = (\n                <button className=\"controller\">\n                    <Play/>\n                </button>\n            )\n        }\n        \n        return (\n                <div className='app'>\n                <div className=\"frame\">\n                    <div className=\"barsDiv container card\"> {bars} </div>\n                </div>\n                <div className=\"control-pannel\">\n                    <div className=\"control-buttons\">\n                    <button className=\"controller\">\n                        <Backward/>\n                    </button>\n                        {playButton}\n                    <button className=\"controller\">\n                        <Forward/>\n                    </button>\n                    </div>\n                </div>\n                <div className=\"pannel\"></div>\n                </div>\n                );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}